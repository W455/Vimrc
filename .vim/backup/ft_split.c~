/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: okrifa <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2016/01/12 17:26:01 by okrifa            #+#    #+#             */
/*   Updated: 2016/01/14 13:46:42 by okrifa           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

int		ft_del(char c)
{
	if (c == ' ' || c == '\n' || c == '\t')
		return (1);
	return (0);
}

int		ft_nbw(char *s)
{
	int i = 0;
	int j = 1;
	while (s[i])
	{
		if (ft_del(s[i]) == 0)
		{
			while (ft_del(s[i]) == 0 && s[i])
				i++;
			j++;
		}
		while(ft_del(s[i]) == 1 && s[i])
			i++;
	}
	return (j);
}

char	*ft_new(char *str, int start, int end)
{
	int i = 0;
	char *new;

	if ((new = (char *)malloc((end - start + 2) * sizeof(char))) == NULL)
		return (NULL);
	while (start <= end)
	{
		new[i] = str[start];
		start++;
		i++;
	}
	new[i] = '\0';
	return (new);
}

char	**ft_split(char *str)
{
	char **tab;
	int i = 0;
	int j = 0;
	int k = 0;

	if((tab = (char **)malloc((ft_nbw(str)) * sizeof(char*))) == NULL)
		return (NULL);
	while (k < ft_nbw(str) && str[i])
	{
		while (str[i])
		{
			while (ft_del(str[i]) == 1 && str[i])
				i++;
			j = i;
			while (ft_del(str[i]) == 0 && str[i])
				i++;
			if (j != i)
			{
				tab[k] = ft_new(str, j, i - 1);
				k++;
			}
		}
	}
	tab[k] = NULL;
	return (tab);
}

int		main(int ac, char **av)
{
	if(ac == 2)
	{
		int i = 0;
		char **tab = ft_split(av[1]);
		while (tab[i] != NULL)
		{
			printf("%s", tab[i]);
				i++;
		}
	}
}
